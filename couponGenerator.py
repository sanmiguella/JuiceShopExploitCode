# main.py

import argparse
import datetime
from z85_codec import generate_coupon, decode_coupon

def main():
    '''
    const generateCoupon = (discount, date = new Date()) => {
        const coupon = utils.toMMMYY(date) + '-' + discount;
        return z85.encode(coupon);
    };

    exports.generateCoupon = generateCoupon;

    const discountFromCoupon = (coupon) => {
        if (coupon) {
            const decoded = z85.decode(coupon);
            if (decoded && (hasValidFormat(decoded.toString()) != null)) {
                const parts = decoded.toString().split('-');
                const validity = parts[0];
                if (utils.toMMMYY(new Date()) === validity) {
                    const discount = parts[1];
                    return parseInt(discount);
                }
            }
        }
        return undefined;
    };

    exports.discountFromCoupon = discountFromCoupon;
    '''
    parser = argparse.ArgumentParser(description='Generate or decode Z85 encoded coupons.')
    subparsers = parser.add_subparsers(dest='command', required=True)

    # Subparser for the generate command
    generate_parser = subparsers.add_parser('generate', help='Generate a Z85 encoded coupon')
    generate_parser.add_argument('discount', type=int, help='Discount amount')
    generate_parser.add_argument('--date', type=str, help='Date in the format YYYY-MM-DD (default: today)', default=None)

    # Subparser for the decode command
    decode_parser = subparsers.add_parser('decode', help='Decode a Z85 encoded coupon')
    decode_parser.add_argument('encoded_coupon', type=str, help='The encoded coupon to decode')

    args = parser.parse_args()

    if args.command == 'generate':
        if args.date:
            date = datetime.datetime.strptime(args.date, '%Y-%m-%d')
        else:
            date = None
            
        encoded_coupon = generate_coupon(args.discount, date)
        print(f"Encoded coupon: {encoded_coupon}")

    elif args.command == 'decode':
        decoded_coupon = decode_coupon(args.encoded_coupon)
        print(f"Decoded coupon: {decoded_coupon}")

if __name__ == '__main__':
    main()
