# z85_codec.py

# Z85 encoding table
z85_chars = [
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 
    'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 
    'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 
    'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 
    'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 
    'Y', 'Z', '.', '-', ':', '+', '=', '^', '!', '/', 
    '*', '?', '&', '<', '>', '(', ')', '[', ']', '{', 
    '}', '@', '%', '$', '#'
]

# Z85 decoding table
z85_decode_map = {char: index for index, char in enumerate(z85_chars)}

def z85_encode(data):
    padding = (4 - len(data) % 4) % 4
    data += b'\0' * padding

    result = []
    value = 0

    for i in range(0, len(data), 4):
        value = (
            (data[i] << 24) +
            (data[i + 1] << 16) +
            (data[i + 2] << 8) +
            data[i + 3]
        )
        divisor = 85 ** 4

        for j in range(5):
            result.append(z85_chars[(value // divisor) % 85])
            divisor //= 85

    return ''.join(result)

def z85_decode(data):
    result = bytearray()
    value = 0

    for i in range(0, len(data), 5):
        value = sum(z85_decode_map[data[i + j]] * (85 ** (4 - j)) for j in range(5))

        result.extend([
            (value >> 24) & 0xFF,
            (value >> 16) & 0xFF,
            (value >> 8) & 0xFF,
            value & 0xFF
        ])

    # Remove padding
    padding = (len(data) % 5) * 4 // 5
    if padding > 0:
        result = result[:-padding]

    return bytes(result)

def generate_coupon(discount, date=None):
    import datetime
    if date is None:
        date = datetime.datetime.now()
    coupon = date.strftime('%b%y').upper() + '-' + str(discount)
    return z85_encode(coupon.encode('utf-8'))

def decode_coupon(encoded_coupon):
    decoded_bytes = z85_decode(encoded_coupon)
    return decoded_bytes.decode('utf-8')

# To make the functions available for import
__all__ = ['z85_encode', 'z85_decode', 'generate_coupon', 'decode_coupon']
